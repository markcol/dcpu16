package disasm

import (
	"bytes"
	"testing"
)

func TestBasic(t *testing.T) {
	mem := []uint16{
		0x7c01, 0x0030, 0x7de1, 0x1000, 0x0020, 0x7803, 0x1000, 0xc00d,
		0x7dc1, 0x001a, 0xa861, 0x7c01, 0x2000, 0x2161, 0x2000, 0x8463,
		0x806d, 0x7dc1, 0x000d, 0x9031, 0x7c10, 0x0018, 0x7dc1, 0x001a,
		0x9037, 0x61c1, 0x7dc1, 0x001a,
	}

	expect := []byte("0x0000:		SET	A, 0x30\n" +
		"0x0002:		SET	[0x1000], 0x20\n" +
		"0x0005:		SUB	A, [0x1000]\n" +
		"0x0007:		IFN	A, 0x10\n" +
		"0x0008:		SET	PC, 0x1a\n" +
		"0x000a:		SET	I, 0x0a\n" +
		"0x000b:		SET	A, 0x2000\n" +
		"0x000d:		SET	[0x2000+I], [A]\n" +
		"0x000f:		SUB	I, 0x01\n" +
		"0x0010:		IFN	I, 0x00\n" +
		"0x0011:		SET	PC, 0xd\n" +
		"0x0013:		SET	X, 0x04\n" +
		"0x0014:		JSR	0x18\n" +
		"0x0016:		SET	PC, 0x1a\n" +
		"0x0018:		SHL	X, 0x04\n" +
		"0x0019:		SET	PC, POP\n" +
		"0x001a:		SET	PC, 0x1a\n\n")

	b := bytes.NewBuffer(make([]byte, 0, 1024))

	disasm(0x000, NewWordReader(mem), b)
	if b.Len() != len(expect) {
		t.Errorf("Expected lengths to be: %d, got %d\n", len(expect), b.Len())
	}
	if !bytes.Equal(b.Bytes(), expect) {
		t.Errorf("Expected results to be the same, but were not:\nexpected:%v\ngot:%v\n", b, expect)
	}
}
